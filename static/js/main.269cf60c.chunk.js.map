{"version":3,"sources":["images/logoDesktop.svg","Components/ViewPage/Header/index.jsx","images/header.svg","images/searchDark.svg","Components/Aditionals/AutoComplete/index.jsx","Components/ViewPage/Filters/index.jsx","images/loading.gif","Components/Aditionals/Loading/index.jsx","images/alerta.svg","Components/Aditionals/Error/index.jsx","Components/ViewCards/index.jsx","OurApp.js","index.js"],"names":["Header","isDark","toggleDarkMode","className","src","logo","alt","onClick","AutoCompleteCard","nameComplete","sent","search","name","Filters","handleChange","handleClick","inputValue","useState","disableButton","setDisableButton","isOn","setIsOn","autoComplete","setAutoComplete","useEffect","fetch","then","resp","json","respData","data","length","friends","onSubmit","e","preventDefault","placeholder","type","value","onChange","disabled","map","algo","AutoComplete","analytics_response_payload","Loading","gifLoading","ErrorAlert","alert","ViewCard","categorys","isFirstLoading","Cards","gif","href","url","images","downsized","id","Error","OurApp","setIsDark","changeTitle","setChangeTitle","setIsFirstLoading","setInputValue","setCategorys","Results","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.269cf60c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoDesktop.2f122678.svg\";","import React from \"react\";\r\nimport logo from \"../../../images/logoDesktop.svg\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = ({ isDark, toggleDarkMode }) => {\r\n  return (\r\n    <header className=\"header_class\">\r\n      <img src={logo} alt=\"logo de imagen\" />\r\n      <button onClick={toggleDarkMode} className=\"btn_header\">{`Modo ${\r\n        isDark ? \"Light\" : \"Dark\"\r\n      }`}</button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/header.9d4669b1.svg\";","export default __webpack_public_path__ + \"static/media/searchDark.ecc2b197.svg\";","import React from \"react\";\r\nimport search from \"../../../images/searchDark.svg\";\r\n\r\nimport \"./autoComplete.css\";\r\n\r\nconst AutoCompleteCard = ({ nameComplete, sent }) => {\r\n  return (\r\n    <>\r\n      <div className=\"li_inside_div\" onClick={sent}>\r\n        <img className=\"loupe\" src={search} alt=\"\" />\r\n        <li>{nameComplete.name}</li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AutoCompleteCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport friends from \"../../../images/header.svg\";\r\nimport search from \"../../../images/searchDark.svg\";\r\nimport AutoCompleteCard from \"../../Aditionals/AutoComplete\";\r\nimport \"./filters.css\";\r\n\r\nconst Filters = ({ handleChange, handleClick, inputValue }) => {\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [isOn, setIsOn] = useState(false);\r\n  const [autoComplete, setAutoComplete] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.giphy.com/v1/gifs/search/tags?q=${inputValue}&limit=5&api_key=MNMtkdCKzAHbx64MticDFColNQcJKuuK`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((respData) => setAutoComplete(respData.data));\r\n  }, [inputValue]);\r\n\r\n  useEffect(() => {\r\n    if (inputValue.length < 1) {\r\n      setDisableButton(true);\r\n      setIsOn(false);\r\n    } else {\r\n      setDisableButton(false);\r\n      setIsOn(true);\r\n    }\r\n  }, [inputValue]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filtros_box\">\r\n        <h1>Â¡Inspirate y busca los mejores GIFS!</h1>\r\n        <img src={friends} alt=\"\" />\r\n        <form onSubmit={handleSubmit} className=\"box__search\">\r\n          <input\r\n            placeholder=\"Busca gifs\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            disabled={disableButton}\r\n            onClick={handleClick}\r\n            className=\"btn_filtros\"\r\n          >\r\n            <img src={search} alt=\"search\" />\r\n          </button>\r\n        </form>\r\n        {isOn && (\r\n          <div className=\"box_main_Autocomplete\">\r\n            <div className=\"div_autoComplete\">\r\n              <div className=\"all_box\">\r\n                {autoComplete.map((algo) => {\r\n                  return (\r\n                    <AutoCompleteCard\r\n                      key={algo.analytics_response_payload}\r\n                      nameComplete={algo}\r\n                      sent={handleClick}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/loading.9573dc17.gif\";","import React from \"react\";\r\nimport gifLoading from \"../../../images/loading.gif\";\r\nimport \"./loading.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h2>Loading...</h2>\r\n      <img src={gifLoading} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/alerta.54303a4e.svg\";","import React from \"react\";\r\nimport alert from \"../../../images/alerta.svg\";\r\n\r\nimport \"./error.css\";\r\n\r\nconst ErrorAlert = () => {\r\n  return (\r\n    <div className=\"box_alert_danger\">\r\n      <div className=\"alert_inside_box\">\r\n        <img className=\"alert__error\" src={alert} alt=\"alert\" />\r\n        <h2>Lo sentimos, no pudimos encontrar su busqueda</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorAlert;\r\n","import ErrorAlert from \"../Aditionals/Error\";\r\nimport \"./viewCard.css\";\r\n\r\nconst ViewCard = ({ categorys, isFirstLoading }) => {\r\n  const Cards = () => {\r\n    return (\r\n      <div className=\"card_box\">\r\n        <div className=\"gallery-container\">\r\n          {categorys.map((gif) => {\r\n            return (\r\n              <a key={gif.id} href={gif.url}>\r\n                <img\r\n                  className=\"gallery__Images\"\r\n                  src={gif.images?.downsized.url}\r\n                  alt=\"gifs\"\r\n                />\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {isFirstLoading || categorys.length > 0 ? <Cards /> : <ErrorAlert />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewCard;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Components/ViewPage/Header\";\r\nimport Filters from \"./Components/ViewPage/Filters\";\r\nimport Loading from \"./Components/Aditionals/Loading\";\r\nimport ViewCard from \"./Components/ViewCards\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport const OurApp = () => {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const [changeTitle, setChangeTitle] = useState(false);\r\n  const [isFirstLoading, setIsFirstLoading] = useState(true);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [categorys, setCategorys] = useState([]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsFirstLoading(true);\r\n\r\n    fetch(\r\n      `https://api.giphy.com/v1/gifs/search?api_key=FYpnX0NSwCE01f8uqdE0XpsAfjsjq6Vi&q=${inputValue}&limit=15&offset=0&rating=g&lang=en`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((respData) => {\r\n        setCategorys(respData.data);\r\n        setIsFirstLoading(false);\r\n      });\r\n    setChangeTitle(true);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const Results = () => {\r\n    return (\r\n      <>\r\n        <div className=\"tittle_change\">\r\n          {changeTitle ? (\r\n            <h2>Resultados de la bÃºsqueda</h2>\r\n          ) : (\r\n            <h2>Realiza tu busqueda</h2>\r\n          )}\r\n        </div>\r\n        <>\r\n          {isFirstLoading && changeTitle ? (\r\n            <Loading />\r\n          ) : (\r\n            <ViewCard\r\n              categorys={categorys}\r\n              changeTitle={changeTitle}\r\n              isFirstLoading={isFirstLoading}\r\n            />\r\n          )}\r\n        </>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDark ? \"dark\" : \"\"}`}>\r\n      <div className=\"container__all\">\r\n        <Header isDark={isDark} toggleDarkMode={toggleDarkMode} />\r\n        <Filters\r\n          inputValue={inputValue}\r\n          handleChange={handleChange}\r\n          handleClick={handleClick}\r\n        />\r\n        <Results />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { OurApp } from \"./OurApp\";\n\nReactDOM.render(<OurApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}